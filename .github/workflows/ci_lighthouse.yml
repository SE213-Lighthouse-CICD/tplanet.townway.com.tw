---
name: CI_Lighthouse
on: [push]
jobs:
  lhci:
    name: Lighthouse Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code     
        uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: npm install   
        run:  npm install
      - name: Check Admin Token
        run: echo ${{ secrets.BUILD_TOKEN_EDWARD }}  
      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.url=https://tplanet.townway.com.tw
      - name: Generate Lighthouse report
        if: ${{ always() }}
        run: lhci upload --target=lhci --serverBaseUrl=http://111.251.181.239:9001/ --token=${{ secrets.BUILD_TOKEN_EDWARD }}      
      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v2
        with: 
          name: lighthouse-report
          path: ./lighthouse-report
      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE='{
            "text": "Lighthouse CI Test Results",
            "attachments": [
              {
                "fallback": "Lighthouse CI Test Results",
                "color": "'${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}'",
                "title": "Performance Score",
                "text": "90",
                "footer": "Lighthouse CI"
              }
            ]
          }'
          curl -X POST -H 'Content-type: application/json' --data "$MESSAGE" $SLACK_WEBHOOK_URL

  process_report:
    name: Process Lighthouse report
    runs-on: ubuntu-latest
    needs: lhci

    steps:
      - name: Download Lighthouse report
        uses: actions/download-artifact@v2
        with: 
          name: lighthouse-report
          path: /home/orihara/lhci/lighthouse-report

      - name: Start Lighthouse CI Server
        run: npm start
...    
